--- st.c	2025-10-05 01:53:11.167987562 +0200
+++ st.c	2025-10-05 14:19:46.947761628 +0200
@@ -2673,8 +2743,16 @@
 	term.line = xrealloc(term.line, row * sizeof(Line));
 	term.alt  = xrealloc(term.alt,  row * sizeof(Line));
 	term.dirty = xrealloc(term.dirty, row * sizeof(*term.dirty));
+	/* allocate dirtystart/end buffers */
+	term.dirtystart = xrealloc(term.dirtystart, row * sizeof(*term.dirtystart));
+	term.dirtyend = xrealloc(term.dirtyend, row * sizeof(*term.dirtyend));
 	term.tabs = xrealloc(term.tabs, col * sizeof(*term.tabs));
 
+	for(i = 0; i < row; ++i) {
+		term.dirtystart[i] = term.dirtyend[i] = -1;
+		term.dirty[i] = 1;
+	}
+
 	/* resize each row to new width, zero-pad if needed */
 	for (i = 0; i < minrow; i++) {
 		term.line[i] = xrealloc(term.line[i], col * sizeof(Glyph));
@@ -2726,14 +2804,20 @@
 void
 drawregion(int x1, int y1, int x2, int y2)
 {
-	int y;
+	int y, start, end;
 
 	for (y = y1; y < y2; y++) {
-		if (!term.dirty[y])
-			continue;
-
-		term.dirty[y] = 0;
-		xdrawline(term.line[y], x1, y, x2);
+		if (term.dirty[y]) {
+			start = term.dirtystart[y];
+			end = term.dirtyend[y];
+			if (start == -1) {  /* Fallback to full if no col tracking */
+				start = x1;
+				end = x2 - 1;
+			}
+			xdrawline(term.line[y], start, y, end + 1);
+			term.dirtystart[y] = term.dirtyend[y] = -1;
+			term.dirty[y] = 0;
+		}
 	}
 }
 
